#! /bin/bash

# FIXME: Does not tag -- leaves <none>
# FIXME: Does not copy all siblings -- only bound
# Examples:
# From 2diidockerrunner/pacta
# pacta-build-image --locally --parent ~/git
# pacta-build-image --parent ~/git --tag 0.0.4.9009

# Defaults:
into="$(pwd)"
parent="../.."
locally=0
url="git@github.com:2DegreesInvesting/"
tag="latest"

for arg in "$@"
do
    case $arg in
        --parent)
        parent="$2"
        shift
        shift
        ;;
        --locally)
        locally=1
        shift
        ;;
        --url)
        url="$2"
        shift
        shift
        ;;
        --tag)
        tag="$2"
        shift
        shift
        ;;
    esac
done

cd $parent
local_repos="$(pacta-find)"



echo "* Cloning siblings into $into"
cd $into || exit 1

if [  $locally == 1 ]
then
   for repo in $local_repos
    do
        git clone -b master --local $repo || exit 1
        echo
    done
else
    for repo in $local_repos
    do
        remote="${url}$(basename ${repo}).git"
        git clone -b master $remote --depth 1 || exit 1
        echo
    done
fi



echo "* Log"
for repo in $local_repos
do
    name="$(basename $repo)"
    git -C "$name" tag -a "${tag}" -m "Release pacta ${tag}" HEAD
    echo "$name"
    echo "$(git -C $name log --pretty='%h %d <%an> (%cr)' | head -n 1)"
    echo
done



echo "* Build image"
cd $into
docker rmi --force $(docker images -q '2dii_pacta' | uniq) 2>/dev/null
docker build --tag 2dii_pacta:"${tag}" --tag 2dii_pacta:latest .
docker save 2dii_pacta | gzip > pacta_web/2dii_pacta.tar.gz

unzip pacta_web_template.zip



echo
echo "* Cleanup"
for repo in $local_repos
do
    name="$(basename $repo)"
    rm -rf "$name"
done

needless_files=".git .gitignore .DS_Store README.md user_results.Rproj"
for file in $needless_files
do
  rm -rf user_results/"${file}"
done

cp -R user_results/ pacta_web/user_results/4/
rm -rf user_results

zip -r pacta_web.zip pacta_web -x ".DS_Store" -x "__MACOSX"

rm -rf pacta_web

echo "Wohoo!"
exit 0
